################################
## Airflow Redis StatefulSet
#################################
{{- if eq .Values.executor "CeleryExecutor" }}
kind: StatefulSet
apiVersion: apps/v1beta2
metadata:
  name: {{ .Release.Name }}-redis
  labels:
    tier: airflow
    component: redis
    release: {{ .Release.Name }}
    platform: {{ .Values.platform.release }}
    workspace: {{ .Values.platform.workspace | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ .Release.Name }}-redis
  selector:
    matchLabels:
      tier: airflow
      component: redis
      release: {{ .Release.Name }}
      platform: {{ .Values.platform.release }}
      workspace: {{ .Values.platform.workspace | quote }}
  template:
    metadata:
      labels:
        tier: airflow
        component: redis
        release: {{ .Release.Name }}
        platform: {{ .Values.platform.release }}
        workspace: {{ .Values.platform.workspace | quote }}
    spec:
    {{- if .Values.redis.runtimeClassName }}
      runtimeClassName: {{ .Values.redis.runtimeClassName }}
    {{- end }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      containers:
        - name: {{ .Release.Name }}-redis
          image: {{- include "redis_image" . | indent 1 }}
          imagePullPolicy: {{ .Values.images.redis.pullPolicy }}
          command: ["/bin/sh"]
          resources:
{{ toYaml .Values.redis.resources | indent 12 }}
          args: ["-c", "redis-server --requirepass ${REDIS_PASSWORD}"]
          ports:
            - name: redis-db
              containerPort: {{ .Values.ports.redisDB }}
          volumeMounts:
            - name: redis-db
              mountPath: /data
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "redis_password_secret" . }}
                  key: password
{{- if not .Values.redis.persistence.enabled }}
      volumes:
        - name: redis-db
          emptyDir: {}
{{- else }}
  volumeClaimTemplates:
    - metadata:
        name: redis-db
      spec:
      {{- if .Values.redis.persistence.storageClassName }}
        storageClassName: {{ .Values.redis.persistence.storageClassName }}
      {{- end }}
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.redis.persistence.size }}
{{- end }}
{{- end }}
